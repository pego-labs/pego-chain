Valid Block Section
===================


::

            {
                "chainname" : "default",
                "blocknumber" : "1",
                "blockHeader" : {
                    "bloom" : "0x
                    "coinbase" : "0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba",
                    "difficulty" : "0x020000",
                    "extraData" : "0x42",
                    "gasLimit" : "0x7fffffffffffffff",
                    "gasUsed" : "0x556d",
                    "hash" : "0x46a8332db77844422d2550849594af5ae994a23274255fd369d3fbe964eb7cb1",
                    "mixHash" : "0x0000000000000000000000000000000000000000000000000000000000000000",
                    "nonce" : "0x0000000000000000",
                    "number" : "0x01",
                    "parentHash" : "0xd1b5003dbed66eb89c9b0062798a4fddf737157ef6550187d098d91ae2c3b853",
                    "receiptTrie" : "0x5fa98a3ba1e25059bf41376c6f9a57b500a02c14c6a87afd1665a3906c4afd51",
                    "stateRoot" : "0x6a117466ec6b8dbea3a613366a1b468bdeb6282e0156772c81cc2139caa7c88e",
                    "timestamp" : "0x03e8",
                    "transactionsTrie" : "0x76660905a74ef4a24b19295d8740a349b1170d3298118106201d43cd7886afbf",
                    "uncleHash" : "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347"
                },
                "transactions" : [
                    {
                        "data" : "0x00000000000000000000000000000000000000000000000000000000000bc03712fac13c68425054e372b0861af05648614d69d32800fba9ad4522238d4b937a0000000000000000000000000000000000000000000000000000000000000000",
                        "gasLimit" : "0x030d40",
                        "gasPrice" : "0x01",
                        "nonce" : "0x00",
                        "r" : "0x3d55a2ac293c7ad82632b18705e67ad2a0e6177d44f601dca043934c8cd8c07a",
                        "s" : "0x1c069ed47162b350a1f496e9a55f53685189e9c3076a4931334a43719b9a158e",
                        "to" : "0x1baf27b88c48dd02b744999cf3522766929d2b2a",
                        "v" : "0x1c",
                        "value" : "0x00"
                    }
                ],
                "uncleHeaders" : [
                ],
                "rlp" : "0xf902c5f901fca0d1b5003dbed66eb89c9b0062798a4fddf737157ef6550187d098d91ae2c3b853a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347942adc25665018aa1fe0e6bc666dac8fc2697ff9baa06a117466ec6b8dbea3a613366a1b468bdeb6282e0156772c81cc2139caa7c88ea076660905a74ef4a24b19295d8740a349b1170d3298118106201d43cd7886afbfa05fa98a3ba1e25059bf41376c6f9a57b500a02c14c6a87afd1665a3906c4afd51bfffffffffffffff82556d8203e842a00000000000000000000000000000000000000000000000000000000000000000880000000000000000f8c3f8c1800183030d40941baf27b88c48dd02b744999cf3522766929d2b2a80b86000000000000000000000000000000000000000000000000000000000000bc03712fac13c68425054e372b0861af05648614d69d32800fba9ad4522238d4b937a00000000000000000000000000000000000000000000000000000000000000001ca03d55a2ac293c7ad82632b18705e67ad2a0e6177d44f601dca043934c8cd8c07aa01c069ed47162b350a1f496e9a55f53685189e9c3076a4931334a43719b9a158ec0",
            }

Contains the block information that is going to be imported into test chain. 
The key field here is **rlp**. All testers take `rlp` field data and import it on 
top of genesis that was described in test by **genesisRLP**

Fields `blockHeader`, `transactions`, `uncleHeaders` describe the content of 
`rlp` for humans to read. Its content **MUST** be equal to `rlp` field binary. 
All testers use **rlp** field data to import it into the test chain. 

Fields `chainname`, `blocknumber` are irrelevant for the test client.


* all fields are 0x prefixed HEX
* 0 values are 0x00 rounded
* empty extraData 0x
* transaction creation `to` is ""
* the `transaction` 




Valid Blocks with Invalid Transactions
--------------------------------------

::

                "transactionSequence" : [
                    {
                        "valid" : "false",
                        "rawBytes" : "0x02f87001018502540be4008502540be40086246139ca800094cc...
                        "exception" : "TR_NoFunds"
                    },
                    {
                        "valid" : "true",
                        "rawBytes" : "0x02f87001018502540be4008502540be40086246139ca800094cc...
                    }
                ]

Blocks that include invalid transactions have an additional field, 
`transactionSequence`. This field is an array of transaction information. 
Each entry in the array has two fields:

- `valid`, true for valid transactions (which also appear in the `transactions` field),
  false for invalid ones.
- `rawBytes`, the rlp-encoded raw bytes of the transaction

Entries for invalid transactions have this additional field:

- `exception`, for invalid transactions, the name of the exception they create.



Invalid Block Section
=====================

::

            {
                "chainname" : "default",
                "blocknumber" : "1",
                "expectException" : "InvalidDifficulty",
                "rlp" : "0xf902c5f901fca0d1b5003dbed66eb89c9b0062798a4fddf737157ef6550187d098d91ae2c3b853a01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347942adc25665018aa1fe0e6bc666dac8fc2697ff9baa06a117466ec6b8dbea3a613366a1b468bdeb6282e0156772c81cc2139caa7c88ea076660905a74ef4a24b19295d8740a349b1170d3298118106201d43cd7886afbfa05fa98a3ba1e25059bf41376c6f9a57b500a02c14c6a87afd1665a3906c4afd51bfffffffffffffff82556d8203e842a00000000000000000000000000000000000000000000000000000000000000000880000000000000000f8c3f8c1800183030d40941baf27b88c48dd02b744999cf3522766929d2b2a80b86000000000000000000000000000000000000000000000000000000000000bc03712fac13c68425054e372b0861af05648614d69d32800fba9ad4522238d4b937a00000000000000000000000000000000000000000000000000000000000000001ca03d55a2ac293c7ad82632b18705e67ad2a0e6177d44f601dca043934c8cd8c07aa01c069ed47162b350a1f496e9a55f53685189e9c3076a4931334a43719b9a158ec0"
            }

The block `rlp` can represent invalid block that is expected to fail upon import. In this case there **MUST BE NO** `blockHeader`, `transactions`, `uncleHeaders` fields.

Fields `chainname`, `blocknumber`, `expectException` are irrelevant for the test client.

`expectException` is index in client's exception string map defined in retesteth client configs.

**Fields**

Fields are similar to the standard ethereum block header / transaction
